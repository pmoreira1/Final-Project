<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <NavigationAction />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='business+ (final_project)' inline='true' name='federated.1d39w141bcdhi6185dynt112c2v3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ironhack.c1wtctuqirxg.eu-central-1.rds.amazonaws.com' name='mysql.0505ppm15vzus018fn3y403iy6rf'>
            <connection class='mysql' dbname='final_project' odbc-native-protocol='' one-time-sql='' port='3306' server='ironhack.c1wtctuqirxg.eu-central-1.rds.amazonaws.com' source-charset='' username='final_admin' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[business].[country]' />
              <expression op='[business_country].[idCountry]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[reviews].[reviewer_country]' />
                <expression op='[review_country].[idCountry]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[business].[idbusiness]' />
                  <expression op='[reviews].[idBusiness]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[business].[category]' />
                    <expression op='[business_category].[idBusiness_category]' />
                  </expression>
                </clause>
                <relation connection='mysql.0505ppm15vzus018fn3y403iy6rf' name='business' table='[business]' type='table' />
                <relation connection='mysql.0505ppm15vzus018fn3y403iy6rf' name='business_category' table='[business_category]' type='table' />
              </relation>
              <relation connection='mysql.0505ppm15vzus018fn3y403iy6rf' name='reviews' table='[reviews]' type='table' />
            </relation>
            <relation connection='mysql.0505ppm15vzus018fn3y403iy6rf' name='review_country' table='[countries]' type='table' />
          </relation>
          <relation connection='mysql.0505ppm15vzus018fn3y403iy6rf' name='business_country' table='[countries]' type='table' />
        </relation>
        <cols>
          <map key='[2letterCode (countries1)]' value='[business_country].[2letterCode]' />
          <map key='[2letterCode]' value='[review_country].[2letterCode]' />
          <map key='[3letterCode (countries1)]' value='[business_country].[3letterCode]' />
          <map key='[3letterCode]' value='[review_country].[3letterCode]' />
          <map key='[business]' value='[business].[business]' />
          <map key='[business_type]' value='[business_category].[business_type]' />
          <map key='[category]' value='[business].[category]' />
          <map key='[country]' value='[business].[country]' />
          <map key='[fullName (countries1)]' value='[business_country].[fullName]' />
          <map key='[fullName]' value='[review_country].[fullName]' />
          <map key='[idBusiness]' value='[reviews].[idBusiness]' />
          <map key='[idBusiness_category]' value='[business_category].[idBusiness_category]' />
          <map key='[idCountry (countries1)]' value='[business_country].[idCountry]' />
          <map key='[idCountry]' value='[review_country].[idCountry]' />
          <map key='[idPlatform]' value='[business].[idPlatform]' />
          <map key='[idReview]' value='[reviews].[idReview]' />
          <map key='[idbusiness]' value='[business].[idbusiness]' />
          <map key='[lat]' value='[business].[lat]' />
          <map key='[long]' value='[business].[long]' />
          <map key='[platform]' value='[business].[platform]' />
          <map key='[rating]' value='[business].[rating]' />
          <map key='[rating_cal]' value='[business].[rating_cal]' />
          <map key='[review_count]' value='[business].[review_count]' />
          <map key='[reviewer_country]' value='[reviews].[reviewer_country]' />
          <map key='[reviewer_score]' value='[reviews].[reviewer_score]' />
          <map key='[reviewer_score_cal]' value='[reviews].[reviewer_score_cal]' />
          <map key='[updated]' value='[business].[updated]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>idbusiness</remote-name>
            <remote-type>3</remote-type>
            <local-name>[idbusiness]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>idbusiness</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>business</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>false</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>4</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>4</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>platform</remote-name>
            <remote-type>130</remote-type>
            <local-name>[platform]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>platform</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>idPlatform</remote-name>
            <remote-type>130</remote-type>
            <local-name>[idPlatform]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>idPlatform</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>3</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>4</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating_cal</remote-name>
            <remote-type>4</remote-type>
            <local-name>[rating_cal]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>rating_cal</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>updated</remote-name>
            <remote-type>16</remote-type>
            <local-name>[updated]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>updated</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[business]</parent-name>
            <remote-alias>review_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>idBusiness_category</remote-name>
            <remote-type>3</remote-type>
            <local-name>[idBusiness_category]</local-name>
            <parent-name>[business_category]</parent-name>
            <remote-alias>idBusiness_category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_type]</local-name>
            <parent-name>[business_category]</parent-name>
            <remote-alias>business_type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>idReview</remote-name>
            <remote-type>3</remote-type>
            <local-name>[idReview]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>idReview</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>idBusiness</remote-name>
            <remote-type>3</remote-type>
            <local-name>[idBusiness]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>idBusiness</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewer_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviewer_score]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>reviewer_score</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewer_score_cal</remote-name>
            <remote-type>4</remote-type>
            <local-name>[reviewer_score_cal]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>reviewer_score_cal</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewer_country</remote-name>
            <remote-type>3</remote-type>
            <local-name>[reviewer_country]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>reviewer_country</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>idCountry</remote-name>
            <remote-type>3</remote-type>
            <local-name>[idCountry]</local-name>
            <parent-name>[review_country]</parent-name>
            <remote-alias>idCountry</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fullName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fullName]</local-name>
            <parent-name>[review_country]</parent-name>
            <remote-alias>fullName</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>false</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2letterCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[2letterCode]</local-name>
            <parent-name>[review_country]</parent-name>
            <remote-alias>2letterCode</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>false</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3letterCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[3letterCode]</local-name>
            <parent-name>[review_country]</parent-name>
            <remote-alias>3letterCode</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>false</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>idCountry</remote-name>
            <remote-type>3</remote-type>
            <local-name>[idCountry (countries1)]</local-name>
            <parent-name>[business_country]</parent-name>
            <remote-alias>idCountry</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fullName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fullName (countries1)]</local-name>
            <parent-name>[business_country]</parent-name>
            <remote-alias>fullName</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>false</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2letterCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[2letterCode (countries1)]</local-name>
            <parent-name>[business_country]</parent-name>
            <remote-alias>2letterCode</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>false</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3letterCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[3letterCode (countries1)]</local-name>
            <parent-name>[business_country]</parent-name>
            <remote-alias>3letterCode</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>false</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[2letterCode (countries1)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[2letterCode]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[3letterCode (countries1)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[3letterCode]' role='dimension' type='nominal' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1d39w141bcdhi6185dynt112c2v3].[usr:Calculation_488640599770968070:qk]&quot;' value='Difference' />
        </aliases>
      </column>
      <column caption='Business Rating' datatype='real' name='[Calculation_488640599759355905]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[rating_cal] * 10' />
      </column>
      <column caption='Reviewer Rating' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_488640599759564802]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[reviewer_score_cal]*10' />
      </column>
      <column caption='Diff from Business Rating' datatype='real' name='[Calculation_488640599880548359]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_488640599759564802]-[Calculation_488640599759355905]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Business Type' datatype='string' name='[business_type]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[category]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Business Country' datatype='string' name='[fullName (countries1)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Reviewer Country' datatype='string' name='[fullName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[idBusiness]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[idBusiness_category]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[idCountry (countries1)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[idCountry]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[idPlatform]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[idReview]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[idbusiness]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='real' hidden='true' name='[rating]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[rating_cal]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[reviewer_country]' role='dimension' type='ordinal' />
      <column datatype='real' hidden='true' name='[reviewer_score]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[reviewer_score_cal]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[updated]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_488640599759355905]' derivation='Avg' name='[avg:Calculation_488640599759355905:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_488640599759564802]' derivation='Avg' name='[avg:Calculation_488640599759564802:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fullName]' derivation='None' name='[none:fullName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Reviewer Country)' hidden='true' name='[Action (Reviewer Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[fullName]' />
        </groupfilter>
      </group>
      <mapped-images>
        <mapped-image caption='Hotel-Room-Safety' expression='file:///D:/Documents/IronHack/projects/Final-Project/pics/Hotel-Room-Safety.jpg' name='[MappedImage1]'>
          <mapping bottom='-1.0' left='-1.0' right='10.0' top='10.0' x='[Calculation_488640599759564802]' y='[Calculation_488640599759355905]' />
        </mapped-image>
      </mapped-images>
      <layout dim-ordering='alphabetic' dim-percentage='0.513682' measure-ordering='alphabetic' measure-percentage='0.486318' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:fullName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turks Caicos Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abkhazia Georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Africa Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crimea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Maarten&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;N/D&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Svalbard Jan Mayen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestinian Territory&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;U S Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire St Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands Malvinas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;The Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States Minor Outlying Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cura ao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cocos K I&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1d39w141bcdhi6185dynt112c2v3].[avg:Calculation_488640599759355905:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1d39w141bcdhi6185dynt112c2v3].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1d39w141bcdhi6185dynt112c2v3].[usr:Calculation_488640599770968070:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1d39w141bcdhi6185dynt112c2v3].[avg:Calculation_488640599759564802:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Netherlands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='idbusiness' />
        <field-sort-custom-order field='business' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='long' />
        <field-sort-custom-order field='platform' />
        <field-sort-custom-order field='rating' />
        <field-sort-custom-order field='Calculation_488640599759355905' />
        <field-sort-custom-order field='Calculation_488640599880548359' />
        <field-sort-custom-order field='business_type' />
        <field-sort-custom-order field='idCountry (countries1)' />
        <field-sort-custom-order field='fullName (countries1)' />
        <field-sort-custom-order field='idCountry' />
        <field-sort-custom-order field='fullName' />
        <field-sort-custom-order field='idBusiness' />
        <field-sort-custom-order field='Calculation_488640599759564802' />
        <field-sort-custom-order field='reviewer_country' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Reviewer Country' name='[Action2]'>
      <activation type='on-select' />
      <source dashboard='Hotel Demand' type='sheet' />
      <link caption='Reviewer Country' delimiter=',' escape='\' expression='tsl:Customer%20Profile?%5Bfederated.1d39w141bcdhi6185dynt112c2v3%5D.%5BfullName%5D~s0=&lt;[fullName]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Customer Profile' />
      </command>
    </action>
    <datasources>
      <datasource caption='business+ (final_project)' name='federated.1d39w141bcdhi6185dynt112c2v3' />
    </datasources>
    <datasource-dependencies datasource='federated.1d39w141bcdhi6185dynt112c2v3'>
      <column caption='Reviewer Country' datatype='string' name='[fullName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
    </datasource-dependencies>
    <nav-action caption='Customer Profile' name='[Action1]'>
      <activation type='on-select' />
      <source dashboard='Hotel Demand' type='sheet' worksheet='TOP 10  Demand - Hotel' />
      <params>
        <param name='sheet' value='Customer Profile' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='Business Distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='business+ (final_project)' name='federated.1d39w141bcdhi6185dynt112c2v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1d39w141bcdhi6185dynt112c2v3'>
            <column caption='Business Type' datatype='string' name='[business_type]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[business_type]' derivation='None' name='[none:business_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='None' name='[none:long:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1d39w141bcdhi6185dynt112c2v3].[none:long:qk]' field-type='quantitative' max='3410880.8820316098' min='-2472945.4382057465' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1d39w141bcdhi6185dynt112c2v3].[none:lat:qk]' field-type='quantitative' max='7311973.3245027335' min='3906681.7533364682' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1d39w141bcdhi6185dynt112c2v3].[none:business_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1d39w141bcdhi6185dynt112c2v3].[none:lat:qk]</rows>
        <cols>[federated.1d39w141bcdhi6185dynt112c2v3].[none:long:qk]</cols>
      </table>
      <simple-id uuid='{9A242C93-8DD7-4C25-A76E-86BFD5B64CBE}' />
    </worksheet>
    <worksheet name='Customer Profile'>
      <table>
        <view>
          <datasources>
            <datasource caption='business+ (final_project)' name='federated.1d39w141bcdhi6185dynt112c2v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1d39w141bcdhi6185dynt112c2v3'>
            <column caption='Reviewer Country' datatype='string' name='[fullName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[fullName]' derivation='None' name='[none:fullName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d39w141bcdhi6185dynt112c2v3].[Action (Reviewer Country)]'>
            <groupfilter function='level-members' level='[fullName]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1d39w141bcdhi6185dynt112c2v3].[Action (Reviewer Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{9D36D605-AE0D-4FB0-B35B-7072CB1F7488}' />
    </worksheet>
    <worksheet name='Reviews Per Nationality'>
      <table>
        <view>
          <datasources>
            <datasource caption='business+ (final_project)' name='federated.1d39w141bcdhi6185dynt112c2v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1d39w141bcdhi6185dynt112c2v3'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Reviewer Country' datatype='string' name='[fullName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[fullName]' derivation='None' name='[none:fullName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1d39w141bcdhi6185dynt112c2v3].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1d39w141bcdhi6185dynt112c2v3].[sum:Number of Records:qk]' />
              <text column='[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FFDCB225-3EE8-494E-B142-E10685E551B4}' />
    </worksheet>
    <worksheet name='TOP 10  Demand - Hotel'>
      <table>
        <view>
          <datasources>
            <datasource caption='business+ (final_project)' name='federated.1d39w141bcdhi6185dynt112c2v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1d39w141bcdhi6185dynt112c2v3'>
            <column caption='Business Rating' datatype='real' name='[Calculation_488640599759355905]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[rating_cal] * 10' />
            </column>
            <column caption='Reviewer Rating' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_488640599759564802]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[reviewer_score_cal]*10' />
            </column>
            <column caption='Diff from Business Rating' datatype='real' name='[Calculation_488640599880548359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_488640599759564802]-[Calculation_488640599759355905]' />
            </column>
            <column-instance column='[Calculation_488640599880548359]' derivation='Avg' name='[avg:Calculation_488640599880548359:qk]' pivot='key' type='quantitative' />
            <column caption='Business Type' datatype='string' name='[business_type]' role='dimension' type='nominal' />
            <column caption='Reviewer Country' datatype='string' name='[fullName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[business_type]' derivation='None' name='[none:business_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[fullName]' derivation='None' name='[none:fullName:nk]' pivot='key' type='nominal' />
            <column datatype='real' hidden='true' name='[rating_cal]' role='measure' type='quantitative' />
            <column datatype='real' hidden='true' name='[reviewer_score_cal]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d39w141bcdhi6185dynt112c2v3].[none:business_type:nk]'>
            <groupfilter function='member' level='[none:business_type:nk]' member='&quot;Hotel&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([fullName])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:fullName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1d39w141bcdhi6185dynt112c2v3].[avg:Calculation_488640599880548359:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]</column>
            <column>[federated.1d39w141bcdhi6185dynt112c2v3].[none:business_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1d39w141bcdhi6185dynt112c2v3].[avg:Calculation_488640599880548359:qk]' value='95' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]' value='168' />
            <format attr='background-color' field='[federated.1d39w141bcdhi6185dynt112c2v3].[avg:Calculation_488640599880548359:qk]' value='#333333' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='912' />
                <format attr='maxwidth' value='912' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]</rows>
        <cols>[federated.1d39w141bcdhi6185dynt112c2v3].[avg:Calculation_488640599880548359:qk]</cols>
      </table>
      <simple-id uuid='{FED18C5D-95F2-49AD-A9D0-51805A7B40E6}' />
    </worksheet>
    <worksheet name='TOP 10  Demand - Restaurants'>
      <table>
        <view>
          <datasources>
            <datasource caption='business+ (final_project)' name='federated.1d39w141bcdhi6185dynt112c2v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1d39w141bcdhi6185dynt112c2v3'>
            <column caption='Business Rating' datatype='real' name='[Calculation_488640599759355905]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[rating_cal] * 10' />
            </column>
            <column caption='Reviewer Rating' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_488640599759564802]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[reviewer_score_cal]*10' />
            </column>
            <column caption='Diff from Business Rating' datatype='real' name='[Calculation_488640599880548359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_488640599759564802]-[Calculation_488640599759355905]' />
            </column>
            <column-instance column='[Calculation_488640599880548359]' derivation='Avg' name='[avg:Calculation_488640599880548359:qk]' pivot='key' type='quantitative' />
            <column caption='Business Type' datatype='string' name='[business_type]' role='dimension' type='nominal' />
            <column caption='Reviewer Country' datatype='string' name='[fullName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[business_type]' derivation='None' name='[none:business_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[fullName]' derivation='None' name='[none:fullName:nk]' pivot='key' type='nominal' />
            <column datatype='real' hidden='true' name='[rating_cal]' role='measure' type='quantitative' />
            <column datatype='real' hidden='true' name='[reviewer_score_cal]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d39w141bcdhi6185dynt112c2v3].[none:business_type:nk]'>
            <groupfilter function='member' level='[none:business_type:nk]' member='&quot;Restaurant&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([fullName])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:fullName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1d39w141bcdhi6185dynt112c2v3].[avg:Calculation_488640599880548359:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]</column>
            <column>[federated.1d39w141bcdhi6185dynt112c2v3].[none:business_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]' value='140' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='912' />
                <format attr='maxwidth' value='912' />
                <format attr='minheight' value='560' />
                <format attr='maxheight' value='560' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1d39w141bcdhi6185dynt112c2v3].[none:fullName:nk]</rows>
        <cols>[federated.1d39w141bcdhi6185dynt112c2v3].[avg:Calculation_488640599880548359:qk]</cols>
      </table>
      <simple-id uuid='{6967971C-0D76-4BBE-B40A-8B3638CB346D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Hotel Demand'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_10' value='left' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98476' id='9' param='vert' type='layout-flow' w='99166' x='417' y='762'>
            <zone h='98476' id='7' type='layout-basic' w='99166' x='417' y='762' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='100300' id='5' is-centered='0' param='D:/Documents/IronHack/projects/Final-Project/pics/Hotel-Room-Safety.jpg' type='bitmap' w='120316' x='-8158' y='2300' />
        <zone h='77352' id='3' name='TOP 10  Demand - Hotel' show-title='false' w='65418' x='1287' y='17177' />
        <zone forceUpdate='true' h='6893' id='10' type='text' w='52725' x='3368' y='7659'>
          <formatted-text>
            <run fontsize='26'>Which customers are more demanding?</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98476' id='17' param='vert' type='layout-flow' w='99166' x='417' y='762'>
                <zone fixed-size='280' h='100300' id='5' is-centered='0' is-fixed='true' param='D:/Documents/IronHack/projects/Final-Project/pics/Hotel-Room-Safety.jpg' type='bitmap' w='120316' x='-8158' y='2300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6893' id='10' type='text' w='52725' x='3368' y='7659'>
                  <formatted-text>
                    <run fontsize='26'>Which customers are more demanding?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77352' id='3' is-fixed='true' name='TOP 10  Demand - Hotel' show-title='false' w='65418' x='1287' y='17177'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{277759B4-0BE5-4368-8690-2BB7B8FFB6A2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Business Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1d39w141bcdhi6185dynt112c2v3].[none:business_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4DF97AAF-48B7-40F1-A14B-A9697ED88A3A}' />
    </window>
    <window class='worksheet' name='Reviews Per Nationality'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{1DD506D0-798C-4283-AFE3-5DA149DC2ED2}' />
    </window>
    <window class='worksheet' name='Customer Profile'>
      <cards>
        <edge name='left'>
          <strip size='239'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5555C85F-9F7B-4F8A-8D46-4CDD42DD78F7}' />
    </window>
    <window class='worksheet' name='TOP 10  Demand - Hotel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d39w141bcdhi6185dynt112c2v3].[none:business_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7116127E-5CB9-4E1C-B1AA-99737A68CC3C}' />
    </window>
    <window class='worksheet' name='TOP 10  Demand - Restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d39w141bcdhi6185dynt112c2v3].[none:business_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FADFCBB9-0D73-47A1-A0F3-262CB87A6DC5}' />
    </window>
    <window class='dashboard' name='Hotel Demand'>
      <viewpoints>
        <viewpoint name='TOP 10  Demand - Hotel'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1d39w141bcdhi6185dynt112c2v3].[avg:Calculation_488640599880548359:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{7E3F92AC-78F7-4E27-AD82-732437219D6E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Business Distribution' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Customer Profile' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hotel Demand' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Reviews Per Nationality' width='192'>
      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
      gEAdOkgAvfANs/J6F0RYGJ8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TOP 10  Demand - Hotel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TOP 10  Demand - Restaurants' width='192'>
      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
      C3gr6QEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
